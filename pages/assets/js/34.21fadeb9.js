(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{454:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("ol",[t("li",[t("p",[a._v("配置"),t("code",[a._v("git")]),a._v("常用操作别名")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--edit")]),a._v("\n")])])]),t("p",[a._v("添加以下配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("alias"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  co "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" checkout\n  ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" commit\n  st "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" status\n  br "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" branch\n  hist "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pretty")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("format:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"%h %ad '),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" %s%d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("%an"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('" '),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--graph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--date")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("short\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" cat-file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v("\n  dump "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" cat-file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v("\n  rb "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" rebase "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--autosquash")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pr")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" remote prune origin\n")])])])]),a._v(" "),t("li",[t("p",[t("code",[a._v("git")]),a._v("设置默认的 Push Remote")]),a._v(" "),t("p",[a._v("在使用"),t("code",[a._v("git push")]),a._v("的时候，经常会碰到这种情况")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fatal: The current branch newFeature has no upstream branch.\nTo push the current branch and "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" the remote as upstream, use\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push --set-upstream origin newFeature\n")])])]),t("p",[a._v("配置推送到远端的默认分支就可解决")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" push.default current\n")])])])]),a._v(" "),t("li",[t("p",[a._v("清理本地 git 分支")]),a._v(" "),t("ul",[t("li",[a._v("清理已合并的分支")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--merged")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("master "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" master"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--prune")]),a._v("\n")])])]),t("ul",[t("li",[a._v("清理所有本地分支,慎重使用")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[t("code",[a._v("git diff")])]),a._v(" "),t("p",[a._v("Git 如果不做设置，默认的 diff 是按行去做的，这种 diff 的方式看起来并不那么的直观，特别是如果你是在做代码的微调，行 diff 不是那么容易让你掌握到改了东西。另外一种情况是，如果你改的是文档类的，比如 markdown，行 diff 就更不可读了,尤其是代码格式化之后。\n设置"),t("code",[a._v("word-diff")]),a._v(" 之后就很直观了")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --word-diff\n\n")])])]),t("ul",[t("li",[a._v("config Beyond Compare")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" diff.tool bc3\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" merge.tool bc3\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" mergetool.bc3.trustExitCode "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),t("ul",[t("li",[a._v("dir-diff")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" difftool origin/master --dir-diff\n")])])])]),a._v(" "),t("li",[t("p",[a._v("清理.DS_Store")]),a._v(" "),t("p",[a._v("Remove existing files from the repository:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" .DS_Store "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" --ignore-unmatch\n")])])])]),a._v(" "),t("li",[t("p",[a._v("git checkout --theirs")])])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unmerged")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" perl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" -e"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/\\t(.*)/ && print \"$1\\n\"'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--theirs")]),a._v(" --\n")])])]),t("blockquote",[t("p",[t("a",{attrs:{href:"https://medium.com/@FlorentDestrema/a-simple-way-to-clean-up-your-git-project-branches-283b87478fbc",target:"_blank",rel:"noopener noreferrer"}},[a._v("A simple way to clean up your git project branches"),t("OutboundLink")],1),t("br"),a._v(" "),t("a",{attrs:{href:"https://gitee.com/progit/",target:"_blank",rel:"noopener noreferrer"}},[a._v("progit"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);