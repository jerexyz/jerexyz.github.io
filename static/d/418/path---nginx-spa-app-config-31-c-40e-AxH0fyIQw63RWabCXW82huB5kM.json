{"data":{"site":{"siteMetadata":{"title":"Jere`s Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"e69394af-2715-56e0-9efe-0621e2029e92","excerpt":"随着react，vue的普及，前后端分离之后，多采用nginx为静态服务器，并用nginx对api做反向代理，以实现前端SPA应用的部署。 nginx location…","html":"<blockquote>\n<p>随着react，vue的普及，前后端分离之后，多采用nginx为静态服务器，并用nginx对api做反向代理，以实现前端SPA应用的部署。</p>\n</blockquote>\n<h3>nginx location 匹配规则</h3>\n<ul>\n<li>~  波浪线表示执行一个正则匹配，区分大小写</li>\n<li>~* 表示执行一个正则匹配，不区分大小写</li>\n<li>^~ 表示普通字符匹配，如果该选项匹配，只匹配该选项，不匹配别的选项，一般用来匹配目录</li>\n<li>=  进行普通字符精确匹配</li>\n<li>@  定义一个命名的 location，使用在内部定向时，例如 error<em>page, try</em>files</li>\n</ul>\n<h3>browserHistory 模式的刷新问题</h3>\n<p>browserHistory 路由模式下，使用history api可以在前端进行页面跳转，但是刷新的话，就需要对链接进行一个修复（重定向）\n我们可以使用nginx 的 <code class=\"language-text\">try_files</code> 来实现：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>app1<span class=\"token operator\">/</span>build<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">index</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>htm<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">location</span> <span class=\"token operator\">^</span><span class=\"token operator\">~</span> <span class=\"token operator\">/</span>app <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">alias</span> <span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>app2<span class=\"token operator\">/</span>build<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">index</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">location</span> <span class=\"token operator\">^</span><span class=\"token operator\">~</span> <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>webpackDevServer的重定向配置</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> basename <span class=\"token operator\">=</span> <span class=\"token string\">'/app'</span><span class=\"token punctuation\">;</span>\ndevServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    proxy<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'/api'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            target<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://api.site'</span><span class=\"token punctuation\">,</span>\n            changeOrigin<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            secure<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> basename<span class=\"token punctuation\">,</span>\n    host<span class=\"token punctuation\">:</span> <span class=\"token constant\">HOST</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span>\n    inline<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    historyApiFallback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        rewrites<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`^</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>basename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>basename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/index.html`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token regex\">/./</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> basename <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    disableHostCheck<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    contentBase<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>多个SPA的部署与重定向</h3>\n<p>首先约定发布代码目录如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/publish_webapp/\n|-- app1/\n    |-- index.html\n    |-- static\n|-- app2/\n    |-- index.html\n    |-- static</code></pre></div>\n<p>nginx 配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">~</span><span class=\"token operator\">*</span> <span class=\"token operator\">^</span>\\<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>\\w<span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>publish_webapp<span class=\"token operator\">/</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">index</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html <span class=\"token operator\">/</span>$<span class=\"token number\">1</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span>$<span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>开启gzip</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gzip  on;\ngzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;</code></pre></div>\n<p>配合webpack在打包的时候压缩静态文件，使用webpack插件<a href=\"https://github.com/webpack-contrib/compression-webpack-plugin\">compression-webpack-plugin</a>\n由于在部署至nginx服务器之前使用了webpack生成了gizp压缩之后的文件，所以就不用使用nginx来压缩静态js了，nginx只需要配置，直接使用gzip之后的文件即可。</p>\n<p>配置gzip_static</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gzip_static on;</code></pre></div>\n<blockquote>\n<p>The ngx<em>http</em>gzip<em>static</em>module module allows sending precompressed files with the “.gz” filename extension instead of regular files.</p>\n</blockquote>","frontmatter":{"title":"nginx部署前端SPA应用实践","date":"February 08, 2018"}}},"pageContext":{"slug":"/nginx-spa-app-config/","previous":{"fields":{"slug":"/moving-to-webpack2/"},"frontmatter":{"title":"迁移至webpack2"}},"next":null}}